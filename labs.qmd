---
title: "E155 Labs"
subtitle: "Microcontrollers & FPGA Design"
---

::: {.labs-intro}
# E155 Labs {.labs-title}

## Microcontrollers & FPGA Design {.labs-subtitle}

Documentation of my journey through **E155: Microcontrollers and FPGA Design** at Harvey Mudd College, mastering embedded systems, digital design, and hardware-software integration.

::: {.progress-indicator}
**Progress:** 2/7 labs completed (29%) | **Current:** Interrupts and Timers | **Next:** Memory-Mapped I/O
:::
:::

## Lab Portfolio {.section-title}

::: {.lab-cards-grid}

::: {.lab-card .completed .scroll-animate-left}
::: {.lab-status .completed}
✓ Completed
:::

### Lab 1: FPGA and MCU Setup

Initial setup and configuration of the development environment, including FPGA programming and microcontroller initialization.

::: {.lab-links}
[📖 Instructions](https://hmc-e155.github.io/lab/lab1/){.lab-link target="_blank"}
[📄 Report](LabPdfs/MicroP's Lab1 (2).pdf){.lab-link target="_blank"}
[💻 Code](https://github.com/HMC-E155/hmc-e155/tree/main/lab){.lab-link target="_blank"}
:::
:::

::: {.lab-card .completed .scroll-animate-scale}
::: {.lab-status .completed}
✓ Completed
:::

### Lab 2: Assembly Language Programming

Deep dive into low-level programming with assembly language, implementing core algorithms and data manipulation techniques directly on the microcontroller.

::: {.lab-links}
[📖 Instructions](https://hmc-e155.github.io/lab/lab2/){.lab-link target="_blank"}
[📄 Report](LabPdfs/MicroP's Lab2.pdf){.lab-link target="_blank"}
:::
:::

::: {.lab-card .in-progress .scroll-animate-right}
::: {.lab-status .in-progress}
🔄 In Progress
:::

### Lab 3: Interrupts and Timers

Exploring real-time programming concepts through interrupt-driven systems and timer-based operations.

::: {.lab-links}
[📖 Instructions](https://hmc-e155.github.io/lab/lab3/){.lab-link target="_blank"}
[📄 Report - Coming Soon]{.lab-link .disabled}
:::
:::

::: {.lab-card .scroll-animate-left}
::: {.lab-status .pending}
⏳ Pending
:::

### Lab 4: Memory-Mapped I/O

Implementation of memory-mapped input/output operations, enabling direct hardware control through memory addressing.

::: {.lab-links}
[📖 Instructions](https://hmc-e155.github.io/lab/lab4/){.lab-link target="_blank"}
[💻 Code](https://github.com/HMC-E155/hmc-e155/tree/main/lab){.lab-link target="_blank"}
[📄 Report - Coming Soon]{.lab-link .disabled}
:::
:::

::: {.lab-card .scroll-animate-scale}
::: {.lab-status .pending}
⏳ Pending
:::

### Lab 5: Analog-to-Digital Conversion

Working with ADC peripherals to interface with analog sensors and signals, covering signal conditioning and sampling theory.

::: {.lab-links}
[📖 Instructions](https://hmc-e155.github.io/lab/lab5/){.lab-link target="_blank"}
[📄 Report - Coming Soon]{.lab-link .disabled}
:::
:::

::: {.lab-card .scroll-animate-right}
::: {.lab-status .pending}
⏳ Pending
:::

### Lab 6: Pulse Width Modulation

Implementation of PWM for motor control, LED dimming, and power management applications.

::: {.lab-links}
[📖 Instructions](https://hmc-e155.github.io/lab/lab6/){.lab-link target="_blank"}
[💻 Code](https://github.com/HMC-E155/hmc-e155/tree/main/lab){.lab-link target="_blank"}
[📄 Report - Coming Soon]{.lab-link .disabled}
:::
:::

::: {.lab-card .scroll-animate-left}
::: {.lab-status .pending}
⏳ Pending
:::

### Lab 7: Serial Communication

Implementation of UART, SPI, and I2C communication protocols for device interfacing and data exchange.

::: {.lab-links}
[📖 Instructions](https://hmc-e155.github.io/lab/lab7/){.lab-link target="_blank"}
[💻 Code](https://github.com/HMC-E155/hmc-e155/tree/main/lab){.lab-link target="_blank"}
[📄 Report - Coming Soon]{.lab-link .disabled}
:::
:::

:::

::: {.skills-section}
## Skills Developed {.section-title}

::: {.skills-grid}
::: {.skill-category .scroll-animate-left}
::: {.skill-icon}
🔧
:::
### Hardware
FPGA programming, microcontroller architecture, digital circuit design, hardware debugging
:::

::: {.skill-category .scroll-animate-scale}
::: {.skill-icon}
💻
:::
### Software
Assembly language, C programming for embedded systems, interrupt-driven programming, real-time system design
:::

::: {.skill-category .scroll-animate-right}
::: {.skill-icon}
🛠️
:::
### Tools
Quartus Prime, ARM Cortex-M development tools, oscilloscopes, logic analyzers, Git
:::
:::

<script src="scroll-animations.js"></script>
:::
